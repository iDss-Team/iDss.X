@page "/ocl/awbinventory"
@using System.Text
@using iDss.X.Models
@inject MasterDataPart1Service _service1
@inject MasterDataPart2Service _service2
@inject MasterDataPart3Service _service3
@inject OutboundService _oclservice
@attribute [TabItemOption(Text = "AWB Inventory")]

<PageTitle>AWB Inventory</PageTitle>

@* Header Section *@  
<Row ItemsPerRow="ItemsPerRow.One" style="margin-bottom: 16px">
    <Stack IsRow="true" Justify="StackJustifyContent.Between" AlignItems="@StackAlignItems.Center">
        <StackItem>
            <h5>Request AWB</h5>
        </StackItem>
    </Stack>
</Row>

@* Content *@
<Row ItemsPerRow="ItemsPerRow.Two" Style="padding-left: 16px; padding-right: 16px; margin-bottom: 16px;">
    <Row ColSpan="1">
        <Select TValue="string"
                Items="provinceItems"
                @bind-Value="selectedProvince"
                DisplayText="Provinsi:"
                ShowLabel="true"
                style="width: 100%; max-width:350px;" />
    </Row>
    <Row ColSpan="1">
        <BootstrapInput TValue="string"
                        IsAutoFocus="true"
                        IsSelectAllTextOnFocus="true"
                        ShowLabel="true"
                        DisplayText="Available AWB"
                        style="width: 100%; max-width:100px;" />
    </Row>
</Row>

<Row ItemsPerRow="ItemsPerRow.Two" Style="padding-left: 16px; padding-right: 16px; margin-bottom: 16px;">
    <Row ColSpan="1">
        <Select TValue="int" 
                Items="branchItems"
                @bind-Value="selectedBranch" 
                DisplayText="Branch:" 
                ShowLabel="true" 
                style="width: 100%; max-width: 350px;" />
    </Row>
    <Row Colspan="1"></Row>
</Row>

<Row ItemsPerRow="ItemsPerRow.Two" Style="padding-left: 16px; padding-right: 16px; margin-bottom: 16px;">
    <Row ColSpan="1">
        @* <BootstrapInputNumber Value="@BindValue" Max="10000" Min="0" IsSelectAllTextOnFocus="true" ShowLabel="true" DisplayText="Total Request" style="width: 100px;" />  *@
        <div style="display: flex; flex-direction: column; width: 100px;">
            <BootstrapInputNumber @bind-Value="@BindValue"
                                  Max="10000"
                                  Min="0"
                                  IsSelectAllTextOnFocus="true"
                                  ShowLabel="true"
                                  DisplayText="Total Request"
                                  style="width: 100%;" />
            <div style="text-align: center; font-size: 12px; color: gray;font-style: italic; margin-top: 2px;">
                Max 10.000 pcs
            </div>
        </div>
    </Row>
    <Row Colspan="1"></Row>
</Row>

<Row ItemsPerRow="ItemsPerRow.One" Style="padding-left: 16px; padding-right: 16px; margin-top: 16px; margin-bottom: 16px;">
    <Button ButtonType="ButtonType.Submit" 
            Size="Size.Small" 
            Color="Color.Success" 
            Icon="fa-solid fa-circle-plus me-2" 
            Style="min-width: 100px;" @onclick="HandleCreate">CREATE</Button>

    <Row ItemsPerRow="ItemsPerRow.Two">
        <Row ColSpan="1">
            <Textarea style="width: 100%; max-width: 350px;" @bind-Value="awbListText"></Textarea>
        </Row>
        <Row Colspan="1"></Row>
    </Row>

    <Button ButtonType="ButtonType.Reset" 
            Size="Size.Small" 
            Color="Color.Danger" 
            Icon="fa-solid fa-arrows-rotate me-2" 
            Style="min-width: 100px;" @onclick="HandleReset">
        Reset
    </Button>
</Row>


@code {
    public int BindValue { get; set; } = 0;

    private AWBInventory awbInventory = new();

    private List<SelectedItem> provinceItems = new();
    private List<SelectedItem> branchItems = new();
    private string selectedProvince;
    private string awbListText = string.Empty;
    private int selectedBranch;

    protected override async Task OnInitializedAsync()
    {
        await LoadProvinceAsync();
        await LoadBranchAsync();
    }

    private async Task LoadProvinceAsync()
    {
        var dataProvince = await _oclservice.GetAllProvinceAsync();

        provinceItems = dataProvince.Select(p => new SelectedItem
            {
                Text = $"{p.provid} | {p.provname}",
                Value = p.provid
            }).ToList();

        provinceItems.Insert(0, new SelectedItem { Text = "Please Select ...", Value = "0" });
    }

    private async Task LoadBranchAsync()
    {
        var dataBranch = await _oclservice.GetAllBranchAsync();

        branchItems = dataBranch.Select(b => new SelectedItem
            {
                Text = $"{b.villid} | {b.branchname}",
                Value = b.branchid.ToString()
            }).ToList();
        branchItems.Insert(0, new SelectedItem { Text = "Please Select ...", Value = "0" });
    }

    private async Task HandleCreate()
    {
        if (BindValue <= 0 || BindValue > 10000)
        {
            awbListText = "Jumlah harus antara 1 sampai 10.000";
            return;
        }

        var sb = new StringBuilder();

        for (int i = 0; i < BindValue; i++)
        {
            var awb = GenerateRandomAWB();
            sb.AppendLine(awb);
        }

        awbListText = sb.ToString();
    }

    private string GenerateRandomAWB()
    {
        return DateTime.Now.ToString("yyMMdd") + new Random().Next(100000, 999999).ToString();
    }

    private void HandleReset()
    {
        awbListText = string.Empty;
        BindValue = 0;
        selectedProvince = "0";
        selectedBranch = 0;
    }

}






