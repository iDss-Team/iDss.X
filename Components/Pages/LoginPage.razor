@page "/login"
@layout iDss.X.Components.Shared.AuthLayout

@using Microsoft.AspNetCore.Identity
@using iDss.X.Models
@using Microsoft.AspNetCore.Components.Forms

@inject NavigationManager Navigation
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

<PageTitle>Login</PageTitle>

<div class="login-item login-item-gitee">
    <div class="login-header">
        <span>Sign-In</span>
    </div>
    <ValidateForm Model="loginModel">
        <div>
            <FloatingLabel DisplayText="Username" TValue="string" @bind-Value="loginModel.Email" IsSelectAllTextOnFocus="true" IsGroupBox="true" PlaceHolder="your username" />
        </div>
        <div>
            <FloatingLabel DisplayText="Password" TValue="string" type="password" @bind-Value="loginModel.Password" IsGroupBox="true" maxlength="30" />
        </div>
        <div class="login-sms">
            <Checkbox TValue="bool" ShowLabel="false" ShowAfterLabel="true" DisplayText="Ingat saya" />
        </div>
        <Button Text="Masuk" Color="Color.Primary"></Button>
        <div class="text-center my-4">
            <a href="#">Forgot your passwrod?</a>
        </div>

        <Divider Text="Ikuti kami di" />
        <div class="login-oauth">
            <div class="login-oauth-item">
                <i class="fa-brands fa-github"></i>
            </div>
            <div class="login-oauth-item">
                <i class="fa-brands fa-twitter"></i>
            </div>
            <div class="login-oauth-item">
                <i class="fa-brands fa-apple"></i>
            </div>
            <div class="login-oauth-item">
                <i class="fa-brands fa-facebook"></i>
            </div>
        </div>
    </ValidateForm>
</div>

@code {
    [CascadingParameter]
    private LoginModel? Model { get; set; }
}


@code {
    private LoginModel loginModel = new();
    private string errorMessage = "";

    private async Task HandleLogin()
    {
        var user = await UserManager.FindByEmailAsync(loginModel.Email);
        if (user == null)
        {
            errorMessage = "Email tidak ditemukan";
            return;
        }

        var result = await SignInManager.PasswordSignInAsync(user, loginModel.Password, false, false);
        if (result.Succeeded)
        {
            Navigation.NavigateTo("/");
        }
        else
        {
            errorMessage = "Login gagal, periksa email atau password Anda";
        }
    }

    public class LoginModel
    {
        public string Email { get; set; } = "";
        public string Password { get; set; } = "";
    }
}
