@page "/ocl/entrydataprimary"
@using System.Text
@using iDss.X.Models
@using iDss.X.Models.Dto
@inject MasterDataPart1Service _service1
@inject MasterDataPart2Service _service2
@inject MasterDataPart3Service _service3
@inject EntryDataPrimaryService entryService
@inject OutboundService _oclservice
@inject ToastService toastService
@attribute [TabItemOption(Text = "Entry Data Primary")]

<ValidateForm Model="entryData">
    <div class="container-fluid">
        <div class="row g-3">

            <div class="col-md-6">
                <Card>
                    <HeaderTemplate>
                        Shipper
                    </HeaderTemplate>
                    <BodyTemplate>
                        <Row ItemsPerRow="ItemsPerRow.Two">
                            <Row RowType="RowType.Inline">
                                <Select TValue="string" @bind-Value="entryData.Shipper.acctno" DisplayText="Account no" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.shippername" DisplayText="Nama" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.addr1" DisplayText="Street/Jalan" PlaceHolder="Address 1" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.addr2" ShowLabel="true" PlaceHolder="Address 2" />
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.addr2"  ShowLabel="true" PlaceHolder="Address 3" />
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.distid" DisplayText="Kecamatan" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.acctno" DisplayText="Kelurahan/Desa" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.cityname" DisplayText="Kota/Kabupaten" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.provname" DisplayText="Provinsi" ShowLabel="true" />
                            </Row>

                            <Row RowType="RowType.Inline">
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.postcode" DisplayText="Post Code" ShowLabel="true" />
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.awb" DisplayText="Shipment ID" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.phone" DisplayText="Phone" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.email" DisplayText="Email" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.attname" DisplayText="Shipper Attn" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipper.oricode" DisplayText="Origin Code" ShowLabel="true"/>
                                <span class="origin-code d-flex justify-content-center w-100">Origin</span>
                            </Row>
                        </Row>
                    </BodyTemplate>
                </Card>

                <Card class="mt-3">
                    <HeaderTemplate>
                        Consignee
                    </HeaderTemplate>
                    <BodyTemplate>
                        <Row ItemsPerRow="ItemsPerRow.Two">
                            <Row RowType="RowType.Inline">
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.cnename" DisplayText="Nama" ShowLabel="true" />
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.addr1" DisplayText="Street/Jalan" PlaceHolder="Address 1" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.addr2" ShowLabel="true" PlaceHolder="Address 2"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.addr3" ShowLabel="true" PlaceHolder="Address 3"/>
                                <Select TValue="string" @bind-Value="entryData.Consignee.cityname" Items="cityItems" DisplayText="Kota/Kabupaten" ShowLabel="true" ShowSearch/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.provname" DisplayText="Provinsi" ShowLabel="true"/>

                            </Row>
                            <Row RowType="RowType.Inline">
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.postcode" DisplayText="Post Code" ShowLabel="true" />
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.phone" DisplayText="Phone " ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.email" DisplayText="Email" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.attname" DisplayText="Consignee Attn" ShowLabel="true"/>
                                @* <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.oricode" DisplayText="Hub Code" ShowLabel="true"/> *@
                                <BootstrapInput TValue="string" @bind-Value="entryData.Consignee.descode" DisplayText="Destination Code" ShowLabel="true"/>
                            </Row>
                        </Row>

                        <Stack IsRow="true" style="gap: 10px; margin-top: 10px;">
                            <Button ButtonType="ButtonType.Reset" Size="Size.Small" Color="Color.Danger" Icon="fa-solid fa-arrows-rotate me-2" Text="Reset" />
                        </Stack>

                    </BodyTemplate>
                </Card>
            </div>

            <div class="col-md-6">
                <Card>
                    <HeaderTemplate>
                        Shipment Detail
                    </HeaderTemplate>
                    <BodyTemplate>
                        <Row ItemsPerRow="ItemsPerRow.Two">
                            <Row RowType="RowType.Inline">
                                @* <DateTimePicker TValue="DateOnly" @bind-Value="entryData.Shipment.pickupdate" DisplayText="Pick Up Date" ShowLabel="true" /> *@
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.awb" DisplayText="AWB" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.refno" DisplayText="ReffNo" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.donumber" DisplayText="DO Number" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.buyerorderno" DisplayText="Buyer Order No" ShowLabel="true" />
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.pickupno" DisplayText="No Resi" ShowLabel="true"/>
                                <Select TValue="string" @bind-Value="entryData.Shipment.deliveryitem" Items="deliveryItemOptions" DisplayText="Delivery Item" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.content" DisplayText="Content" ShowLabel="true"/>
                                <BootstrapInput TValue="decimal?" @bind-Value="entryData.Shipment.itemvalue" DisplayText="Item Value" ShowLabel="true"/>
                                <Select TValue="string" @bind-Value="entryData.Shipment.service" Items="servicetypeItemOptions" DisplayText="Service Type" ShowLabel="true"/>
                                <Select TValue="string" @bind-Value="entryData.Shipment.linehaul" Items="linehaulItemOptions" DisplayText="Line Haul" ShowLabel="true"/>
                            </Row>

                            <Row RowType="RowType.Inline">
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.hubcode" DisplayText="Hub Code" ShowLabel="true" />
                                <BootstrapInput TValue="int" @bind-Value="entryData.Shipment.pieces" DisplayText="Pieces" PlaceHolder="Pcs" ShowLabel="true" />
                                <BootstrapInput TValue="decimal" @bind-Value="entryData.Shipment.actweight" DisplayText="Actual Weight" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.unitweight" DisplayText="Unit Weight" ShowLabel="true"/>
                                <BootstrapInput TValue="decimal" @bind-Value="entryData.Shipment.volweight" DisplayText="Volume Weight" ShowLabel="true" />
                                <BootstrapInput TValue="decimal" @bind-Value="entryData.Shipment.chargeweight" DisplayText="Charge Weight" ShowLabel="true" />
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.intruction" DisplayText="Notes" ShowLabel="true"/>
                                <Checkbox TValue="bool" class="custom-chekbox"/>
                                <BootstrapInput TValue="int" @bind-Value="entryData.Shipment.isinsurance" DisplayText="Shipment Insurance" ShowLabel="true"/>
                                <BootstrapInput TValue="string" @bind-Value="entryData.Shipment.vouchercode" DisplayText="Voucher Code" ShowLabel="true" />
                            </Row>
                        </Row>

                        <Stack IsRow="true" style="gap: 10px; margin-top: 10px;">
                            <Button ButtonType="ButtonType.Reset" Size="Size.Small" Color="Color.Danger" Icon="fa-solid fa-arrows-rotate me-2" Text="Reset" />
                        </Stack>

                    </BodyTemplate>
                </Card>

                <Card class="mt-3">
                    <HeaderTemplate>
                        Packing
                    </HeaderTemplate>
                    <BodyTemplate>
                        <Row ItemsPerRow="ItemsPerRow.Three">  
                            <Row RowType="RowType.Inline">
                                <Checkbox TValue="string" @bind-Value="entryData.Shipment.packingtype" DisplayText="Packing" ShowLabel="true" />
                            </Row>

                            <Row RowType="RowType.Inline">
                                <Select TValue="string" ShowSearch />
                            </Row>

                            <Row RowType="RowType.Inline">
                                <Button ButtonType="ButtonType.Reset" Size="Size.Small" Color="Color.Danger" Icon="fa-solid fa-arrows-rotate me-2" Text="Reset"/>
                            </Row>
                        </Row>
                    </BodyTemplate>
                </Card>

                <Card class="mt-3">
                    <HeaderTemplate>
                        Save
                    </HeaderTemplate>
                    <BodyTemplate>
                        <Row>
                            <Row ItemsPerRow="ItemsPerRow.Two">
                                <Row RowType="RowType.Inline">
                                    <BootstrapInput TValue="string" DisplayText="eConnote/AWB" PlaceHolder="Auto Generated" ShowLabel="true" />
                                    <BootstrapInput TValue="string" DisplayText="Trx No" PlaceHolder="Auto Generated" ShowLabel="true" />
                                </Row>
                            </Row>

                            <Row ItemsPerRow="ItemsPerRow.Two" RowType="RowType.Inline">
                                <Select TValue="string" DisplayText="Branch" ShowLabel="true" ShowSearch />
                                <BootstrapInput TValue="int" IsAutoFocus="true" Readonly="true" IsSelectAllTextOnFocus="true" ShowLabel="true" DisplayText="Available AWB"/>
                            </Row>

                          @*   <Stack IsRow="true" style="gap: 10px; margin-top: 20px;">
                                <Button ButtonType="ButtonType.Submit" Size="Size.Small" Color="Color.Success" Icon="fa-solid fa-floppy-disk" Text="Save" />
                                <Button ButtonType="ButtonType.Reset" Size="Size.Small" Color="Color.Primary" Icon="fa-solid fa-eye" Text="View Data" />
                                <Button ButtonType="ButtonType.Reset" Size="Size.Small" Color="Color.Danger" Icon="fa-solid fa-arrows-rotate me-2" Text="Reset All" />
                            </Stack> *@

                        </Row>
                    </BodyTemplate>
                </Card>


            </div>
        </div>

        <Stack Justify="StackJustifyContent.Center" class="mt-3" IsRow="true">
            <div class="btn-group" role="group">
                <Button ButtonType="ButtonType.Submit" Size="Size.Small" Color="Color.Success" Icon="fa-solid fa-floppy-disk" Text="Save" />
                <Button ButtonType="ButtonType.Reset" Size="Size.Small" Color="Color.Primary" Icon="fa-solid fa-eye" Text="View Data" />
                <Button ButtonType="ButtonType.Reset" Size="Size.Small" Color="Color.Danger" Icon="fa-solid fa-arrows-rotate me-2" Text="Reset All" />
            </div>
        </Stack>

    </div>
</ValidateForm>


@code {
    private List<SelectedItem> cityItems = new();
    protected override async Task OnInitializedAsync()
    {
        var city = await entryService.GetAllCityAsync(); 

        cityItems = city
        .Select(c => new SelectedItem(c.cityname, c.cityname))
        .ToList();
    }

    private List<SelectedItem> deliveryItemOptions = new()
    {
        new SelectedItem("PAKET", "PAKET"),
        new SelectedItem("POLIS", "POLIS"),
        new SelectedItem("DOCUMENT", "DOCUMENT"),
        new SelectedItem("FOOD", "FOOD"),
        new SelectedItem("MAJALAH", "MAJALAH"),
        new SelectedItem("VOUCHER", "VOUCHER"),
        new SelectedItem("BULETIN", "BULETIN"),
        new SelectedItem("VALUABLE GOODS", "VALUABLE GOODS"),
        new SelectedItem("HEAVY CARGO", "HEAVY CARGO"),
        new SelectedItem("OBAT", "OBAT"),
        new SelectedItem("OTHERS", "OTHERS")
    };
    
    private List<SelectedItem> servicetypeItemOptions = new()
    {
        new SelectedItem("OVERNIGHT", "OVERNIGHT SERVICE"),
        new SelectedItem("REGULAR", "REGULAR SERVICE"),
        new SelectedItem("SAME DAY", "SAME DAY SERVICE"),
        new SelectedItem("TRUCK", "TRUCK SERVICE")
    }; 
    
    private List<SelectedItem> linehaulItemOptions = new()
    {
        new SelectedItem("UDARA", "UDARA"),
        new SelectedItem("DARAT", "DARAT"),
        new SelectedItem("LAUT", "LAUT")
        
    };

    private EntryDataPrimaryDto entryData = new()
    {
        Shipper = new(),
        Shipment = new(),
        Consignee = new()
    };

//     private async Task HandleValidSubmit()
//     {
//         Simpan data ke database via service
//         await entryService.SaveEntryDataAsync(entryData);

//         Tampilkan notifikasi
//         toastService.ShowSuccess("Data berhasil disimpan!");
//     }
}
